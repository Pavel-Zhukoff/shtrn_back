version: '3.8'
services:
  app:
    container_name: app
    restart: always
    build: .
    volumes:
      - ./app:/home/app/
      - ./logs/gunicorn/:/home/logs/gunicorn/
      - ./app/media:/home/app/media/
      - ./app/static:/home/app/static/
    env_file:
      - ./env_vars/dev.env
    environment:
      - G_ACCESS_LOGS=/home/logs/gunicorn/access.log
      - G_ERROR_LOGS=/home/logs/gunicorn/error.log
    command: ["sh", "./start.sh"]
    networks:
      - db_network
      - nginx_network
      - redis_network
    depends_on:
      - db
      - peer_server
      - redis
  nginx:
    container_name: nginx
    image: nginx:stable-alpine
    restart: always
    ports:
      - 8000:80
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./logs/nginx:/var/log/nginx
      - ./app/media:/home/app/media/
      - ./app/static:/home/app/static/
    networks:
      - nginx_network
    depends_on:
      - app
  db:
    container_name: db
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
      - POSTGRES_DB=hello_django_dev
    networks:
      - db_network
    volumes:
      - ./pg_data:/var/lib/postgresql/data/
  peer_server:
    image: peerjs/peerjs-server:latest
    command: peerjs --port 9000 --key peerjs
    restart: always
    ports:
      - 9000:9000
  redis:
    image: redis:alpine
    restart: always
    networks:
      - redis_network
networks:
  nginx_network:
    driver: bridge
  db_network:
    driver: bridge
  redis_network:
    driver: bridge